import './globals.css'
import type { Metadata } from 'next'
import { Locale, i18n } from '@/i18n.config'
import Header from './components/header'

import { Inter } from 'next/font/google'
const inter = Inter({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app'
}

/**
 * Generates static parameters for static site generation with locale support.
 * This function maps over the defined locales in the i18n configuration
 * and returns an array of parameters, each containing a 'lang' field.
 * 
 * @returns A promise that resolves to an array of objects.
 * Each object contains a 'lang' field corresponding to a supported locale.
 */
export async function generateStaticParams() {
  // Map each locale to an object with a 'lang' property
  return i18n.locales.map(locale => ({ lang: locale }))
}

/**
 * RootLayout Component
 * 
 * Serves as the root layout for the application, dynamically adjusting based on the current locale.
 * It wraps the page content with a Header component and applies global font styles.
 * 
 * @param {Object} props The component props.
 * @param {React.ReactNode} props.children Page-specific content to be rendered within the main layout.
 * @param {Object} props.params Parameters passed to the component, including the current language setting.
 * @param {Locale} props.params.lang The current locale used for internationalization.
 * 
 * @returns {JSX.Element} The root layout structure of the application.
 */
export default function RootLayout({
  children,
  params
}: {
  children: React.ReactNode
  params: { lang: Locale }
}) {
  // Set the HTML lang attribute to match the current locale for accessibility and SEO.
  // Apply a global font style using a className generated from the Inter font.
  return (
    <html lang={params.lang}>
      <body className={inter.className}>
        {/* Render the Header component, passing the current language */}
        <Header lang={params.lang} />
        {/* Main content area for child components */}
        <main>{children}</main>
      </body>
    </html>
  )
}
